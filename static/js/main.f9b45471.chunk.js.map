{"version":3,"sources":["UserInfo.js","Title.js","Orders.js","NotFound.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["UserInfo","profile","useCookies","removeCookies","history","useHistory","Fragment","id","className","href","src","imageUrl","Config","DEFAULT_PROFILE_IMAGEURL","alt","name","email","clientId","GOOGLE_AUTH2_CLIENT_ID","render","renderProps","onClick","disabled","onLogoutSuccess","console","log","push","onFailure","alert","Title","title","document","Orders","props","cookies","useEffect","undefined","data","Data","insertRow","cellEdit","mode","blurToSave","deleteRow","selectRow","pagination","search","options","insertText","deleteText","version","isKey","dataField","editable","validator","test","validateEmail","type","values","quantity","isNaN","NotFound","to","Home","setCookies","buttonText","isSignedIn","onSuccess","response","profileObj","path","cookiePolicy","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9b45471.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { useCookies } from 'react-cookie';\r\nimport Config from './Config.json';\r\n\r\nconst UserInfo = (profile) => {\r\n    const [cookies, setCookies, removeCookies] = useCookies();\r\n    const history = useHistory();\r\n\r\n    const googleSuccessfulLogout = () => {\r\n        console.log('logout');\r\n        removeCookies('name');\r\n        removeCookies('email');\r\n        removeCookies('imageUrl');\r\n        history.push('/');\r\n    };\r\n\r\n    const googleFailureLogout = () => {\r\n        alert('Failed to logout! Try again.');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <a id=\"show-sidebar\" className=\"btn btn-sm btn-dark\" href=\"#\">\r\n                <i className=\"fa fa-bars\"></i>\r\n            </a>\r\n            <nav id=\"sidebar\" className=\"sidebar-wrapper\">\r\n                <div className=\"sidebar-content\">\r\n                    <div className=\"sidebar-brand\">\r\n                        <a href=\"https://www.utilize.app/\">Utilize</a>\r\n                        <div id=\"close-sidebar\">\r\n                            <i className=\"fa fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sidebar-header\">\r\n                        <div className=\"user-pic\">\r\n                            <img\r\n                                className=\"img-responsive img-rounded\"\r\n                                src={ profile.imageUrl ? profile.imageUrl : Config.DEFAULT_PROFILE_IMAGEURL }\r\n                                alt=\"User picture\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"user-info\">\r\n                            <span className=\"user-name\">\r\n                                <strong>{ profile.name }</strong>\r\n                            </span>\r\n                            <span className=\"user-role\">{ profile.email }</span>\r\n                            <span className=\"user-status\">\r\n                                <i className=\"fa fa-circle\"></i>\r\n                                <span>Logged In</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sidebar-menu\">\r\n                        <ul>\r\n                            <li className=\"header-menu\">\r\n                                <span>General</span>\r\n                            </li>\r\n                            <li>\r\n                                <GoogleLogout\r\n                                    clientId={ Config.GOOGLE_AUTH2_CLIENT_ID }\r\n                                    render={ renderProps => (\r\n                                        <a href=\"#\">\r\n                                            <i className=\"fa fa-power-off\"></i>\r\n                                            <span onClick={ renderProps.onClick } disabled={ renderProps.disabled }>Logout</span>\r\n                                        </a>\r\n                                    ) }\r\n                                    onLogoutSuccess={ googleSuccessfulLogout }\r\n                                    onFailure={ googleFailureLogout }\r\n                                >\r\n                                </GoogleLogout>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserInfo;","import React from 'react';\r\n\r\nconst Title = (title) => {\r\n    document.title = title + ' | Internship Assessment @ Utilize';\r\n};\r\n\r\nexport default Title;","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nimport Data from './Data.json';\r\nimport UserInfo from './UserInfo';\r\nimport { useCookies } from 'react-cookie';\r\nimport Title from './Title';\r\n\r\nconst Orders = (props) => {\r\n    const [cookies, setCookies] = useCookies();\r\n\r\n    useEffect(() => {\r\n        // console.log(cookies);\r\n        if (cookies.email === undefined) {\r\n            props.history.push('/');\r\n        }\r\n    }, []);\r\n\r\n    var products = ['Product 1', 'Product 2', 'Product 3'];\r\n\r\n    const customerNameValidator = (name) => {\r\n        if (name === '') {\r\n            return 'This should not be empty';\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    const customerEmailValidator = (email) => {\r\n        const check = validateEmail(email);\r\n        if (!check) {\r\n            return 'This is not a valid email';\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const quantityValidator = (quantity) => {\r\n        if (quantity === '') {\r\n            return 'This should not be empty';\r\n        }\r\n        const check = isNaN(quantity);\r\n        if (check) {\r\n            return 'This should be an integer';\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const cellEditProp = {\r\n        mode: 'dbclick',\r\n        blurToSave: true\r\n    };\r\n\r\n    const options = {\r\n        insertText: 'Create New Order', // custom insert text\r\n        deleteText: 'Delete Order'  // custom delete text\r\n    };\r\n\r\n    // enable select row\r\n    const selectRowProp = {\r\n        mode: 'checkbox'\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { Title('Orders') }\r\n            <div className=\"page-wrapper chiller-theme toggled\">\r\n                <UserInfo name={ cookies.name } email={ cookies.email } imageUrl={ cookies.imageUrl } />\r\n\r\n                <main className=\"page-content\">\r\n                    <div className=\"container pt-5\">\r\n                        <div className=\"App\">\r\n                            <BootstrapTable data={ Data } insertRow={ true } cellEdit={ cellEditProp }\r\n                                deleteRow={ true } selectRow={ selectRowProp } pagination={ true }\r\n                                search={ true } options={ options } version='4'>\r\n                                <TableHeaderColumn isKey={ true } dataField='id'>Order ID</TableHeaderColumn>\r\n                                <TableHeaderColumn dataField='customer_name' editable={ { validator: customerNameValidator } }>Customer Name</TableHeaderColumn>\r\n                                <TableHeaderColumn dataField='customer_email' editable={ { validator: customerEmailValidator } }>Customer Email</TableHeaderColumn>\r\n                                <TableHeaderColumn dataField='product' editable={ { type: 'select', options: { values: products } } }>Product</TableHeaderColumn>\r\n                                <TableHeaderColumn dataField='quantity' editable={ { validator: quantityValidator } }>Quantity</TableHeaderColumn>\r\n                            </BootstrapTable>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Title from './Title';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <React.Fragment>\r\n            { Title('Page Not Found') }\r\n            <div className=\"container\">\r\n                <div id=\"home\" className=\"row mt-5 px-1 py-5\">\r\n                    <div className=\"shadow-sm p-1 my-5 col-12 text-center\">\r\n                        <h1>404</h1>\r\n                        <p>Error Occured! Page Not Found.</p>\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn btn-sm btn-primary\">Home</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useCookies } from 'react-cookie';\r\nimport Config from './Config.json';\r\nimport Title from './Title';\r\n\r\nconst Home = (props) => {\r\n    const [cookies, setCookies] = useCookies();\r\n\r\n    const googleSuccessfulLogin = (response) => {\r\n        console.log(response);\r\n        const profile = response.profileObj;\r\n        setCookies('email', profile.email, { path: '/' });\r\n        setCookies('name', profile.name, { path: '/' });\r\n        setCookies('imageUrl', profile.imageUrl, { path: '/' });\r\n        props.history.push('/orders');\r\n    };\r\n\r\n    const googleFailureLogin = (response) => {\r\n        alert('Failed to retrieve information! Try again.');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { Title('Home') }\r\n            <div className=\"container\">\r\n                <div id=\"home\" className=\"row mt-5 px-1 py-5\">\r\n                    <div className=\"shadow-sm p-1 my-5 col-12 text-center\">\r\n                        <h1>Internship Assessment @ Utilize</h1>\r\n                        <strong className=\"text-muted\">\r\n                            By Suman Rana\r\n                    </strong>\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                        <GoogleLogin\r\n                            clientId={ Config.GOOGLE_AUTH2_CLIENT_ID }\r\n                            buttonText=\"Login\"\r\n                            isSignedIn={ true }\r\n                            onSuccess={ googleSuccessfulLogin }\r\n                            onFailure={ googleFailureLogin }\r\n                            cookiePolicy={ 'single_host_origin' }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Orders from './Orders';\nimport NotFound from './NotFound';\nimport Home from './Home';\n\nconst App = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t<Route exact path=\"/orders\" component={ Orders } />\n\t\t\t\t\t<Route exact path=\"*\" component={ NotFound } />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport { CookiesProvider } from 'react-cookie';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<CookiesProvider>\n\t\t<App />\n\t</CookiesProvider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}